#Defines which Linux system user will own and run the Nginx server

worker_processes auto;
#Referes to single threaded process. Generally set to be equal to the number of CPUs or cores.

#Specifies the file where server logs.

#pid        logs/nginx.pid;
#nginx will write its master process ID(PID).
events {
    worker_connections 1024;
    # worker_processes and worker_connections allows you to calculate maxclients value:
    # max_clients = worker_processes * worker_connections
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_http_version 1.1;
            access_by_lua_block {
                local args = ngx.req.get_uri_args()
                local new_args = {}
                local all_have_var_prefix = true
                for key, value in pairs(args) do
                    if key == "context" then
                        break
                    end
                    local var_key = "var-" .. key
                    if not args[var_key] then
                        all_have_var_prefix = false
                        break
                    end
                end
                if not all_have_var_prefix then
                    for key, value in pairs(args) do
                        new_args[key] = value
                        if not key:match("^var%-") then
                            new_args["var-" .. key] = value
                        end
                    end
                end
                if not all_have_var_prefix then
                    local new_query = ngx.encode_args(new_args)
                    ngx.req.set_uri_args(new_query)
                    -- return ngx.redirect("http://localhost:8001" .. ngx.var.uri .. "?" .. new_query)
                end
            }
            proxy_set_header Referer "http://$host$uri$is_args$args";
            resolver 127.0.0.11;
            proxy_pass http://http_server:8001$uri$is_args$args;
        }
    }
}

