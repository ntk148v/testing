version: "3.7"

volumes:
  minio_data:
    driver: local

networks:
  parseable-internal:

services:
  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z
    container_name: minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/minio/parseable && \
        minio server /data/minio --console-address ":9090"
    environment:
      - MINIO_ROOT_USER=parseable
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_UPDATE=off
    ports:
      - 9000:9000
      - 9090:9090
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 15s
      timeout: 20s
      retries: 5
    networks:
      - parseable-internal
  # query server
  parseable-query:
    image: containers.parseable.com/parseable/parseable:edge
    container_name: parseable_query
    command: ["parseable", "s3-store"]
    ports:
      - 8000:8000
    environment:
      - P_S3_URL=http://minio:9000
      - P_S3_ACCESS_KEY=parseable
      - P_S3_SECRET_KEY=supersecret
      - P_S3_REGION=us-east-1
      - P_S3_BUCKET=parseable
      - P_STAGING_DIR=/tmp/data
      - P_USERNAME=parseableadmin
      - P_PASSWORD=parseableadmin
      - P_CHECK_UPDATE=false
      - P_PARQUET_COMPRESSION_ALGO=snappy
      - P_MODE=query
    networks:
      - parseable-internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/liveness"]
      interval: 15s
      timeout: 20s
      retries: 5
    depends_on:
      - minio
    deploy:
      restart_policy:
        condition: on-failure
        delay: 20s
        max_attempts: 3
  # ingest server one
  parseable-ingest-one:
    image: containers.parseable.com/parseable/parseable:edge
    container_name: parseable_ingest_one
    command: ["parseable", "s3-store"]
    ports:
      - 8000
    environment:
      - P_S3_URL=http://minio:9000
      - P_S3_ACCESS_KEY=parseable
      - P_S3_SECRET_KEY=supersecret
      - P_S3_REGION=us-east-1
      - P_S3_BUCKET=parseable
      - P_STAGING_DIR=/tmp/data
      - P_USERNAME=parseableadmin
      - P_PASSWORD=parseableadmin
      - P_CHECK_UPDATE=false
      - P_PARQUET_COMPRESSION_ALGO=snappy
      - P_MODE=ingest
      - P_INGESTOR_ENDPOINT=parseable-ingest-one:8000
    networks:
      - parseable-internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/liveness"]
      interval: 15s
      timeout: 20s
      retries: 5
    depends_on:
      - parseable-query
      - minio
    deploy:
      restart_policy:
        condition: on-failure
        delay: 20s
        max_attempts: 3
  # ingest server two
  parseable-ingest-two:
    image: containers.parseable.com/parseable/parseable:edge
    container_name: parseable_ingest_two
    command: ["parseable", "s3-store"]
    ports:
      - 8000
    environment:
      - P_S3_URL=http://minio:9000
      - P_S3_ACCESS_KEY=parseable
      - P_S3_SECRET_KEY=supersecret
      - P_S3_REGION=us-east-1
      - P_S3_BUCKET=parseable
      - P_STAGING_DIR=/tmp/data
      - P_USERNAME=parseableadmin
      - P_PASSWORD=parseableadmin
      - P_CHECK_UPDATE=false
      - P_PARQUET_COMPRESSION_ALGO=snappy
      - P_MODE=ingest
      - P_INGESTOR_ENDPOINT=parseable-ingest-two:8000
    networks:
      - parseable-internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/liveness"]
      interval: 15s
      timeout: 20s
      retries: 5
    depends_on:
      - parseable-query
      - minio
    deploy:
      restart_policy:
        condition: on-failure
        delay: 20s
        max_attempts: 3
  # ingest server three
  parseable-ingest-three:
    image: containers.parseable.com/parseable/parseable:edge
    container_name: parseable_ingest_three
    command: ["parseable", "s3-store"]
    ports:
      - 8000
    environment:
      - P_S3_URL=http://minio:9000
      - P_S3_ACCESS_KEY=parseable
      - P_S3_SECRET_KEY=supersecret
      - P_S3_REGION=us-east-1
      - P_S3_BUCKET=parseable
      - P_STAGING_DIR=/tmp/data
      - P_USERNAME=parseableadmin
      - P_PASSWORD=parseableadmin
      - P_CHECK_UPDATE=false
      - P_PARQUET_COMPRESSION_ALGO=snappy
      - P_MODE=ingest
      - P_INGESTOR_ENDPOINT=parseable-ingest-three:8000
    networks:
      - parseable-internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/liveness"]
      interval: 15s
      timeout: 20s
      retries: 5
    depends_on:
      - parseable-query
      - minio
    deploy:
      restart_policy:
        condition: on-failure
        delay: 20s
        max_attempts: 3
  # ingest server four
  parseable-ingest-four:
    image: containers.parseable.com/parseable/parseable:edge
    container_name: parseable_ingest_four
    command: ["parseable", "s3-store"]
    ports:
      - 8000
    environment:
      - P_S3_URL=http://minio:9000
      - P_S3_ACCESS_KEY=parseable
      - P_S3_SECRET_KEY=supersecret
      - P_S3_REGION=us-east-1
      - P_S3_BUCKET=parseable
      - P_STAGING_DIR=/tmp/data
      - P_USERNAME=parseableadmin
      - P_PASSWORD=parseableadmin
      - P_CHECK_UPDATE=false
      - P_PARQUET_COMPRESSION_ALGO=snappy
      - P_MODE=ingest
      - P_INGESTOR_ENDPOINT=parseable-ingest-four:8000
    networks:
      - parseable-internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/liveness"]
      interval: 15s
      timeout: 20s
      retries: 5
    depends_on:
      - parseable-query
      - minio
    deploy:
      restart_policy:
        condition: on-failure
        delay: 20s
        max_attempts: 3

  # The Vector service. It collects logs and sends them to clickhouse.
  vector:
    image: timberio/vector:0.49.0-debian
    container_name: vector
    restart: unless-stopped
    volumes:
      # Mount the local vector.yaml config file into the container.
      - ./vector.yaml:/etc/vector/vector.yaml
    ports:
      # Expose Vector's API for metrics and health checks.
      - "8686:8686"
    depends_on:
      - parseable-query
    networks:
      - parseable-internal

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - 80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - parseable-internal
    depends_on:
      parseable-ingest-one:
        condition: service_healthy
      parseable-ingest-two:
        condition: service_healthy
      parseable-ingest-three:
        condition: service_healthy
      parseable-ingest-four:
        condition: service_healthy
