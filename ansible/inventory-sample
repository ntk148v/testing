# These initial groups are the only groups required to be modified. The
# additional groups are for more control of the environment.

[all:vars]
ansible_connection=ssh
ansible_ssh_port=22
ansible_ssh_user=root
ansible_ssh_pass=passwordne
ansible_become_pass=passwordne
ansible_become=true

[cluster]
192.168.9.11
192.168.9.13
192.168.9.14

[control]
# These hostname must be resolvable from your deployment host
192.168.9.110
192.168.9.135
192.168.9.160

# The above can also be specified as follows:
#control[01:03]     ansible_user=kolla

# The network nodes are where your l3-agent and loadbalancers will run
# This can be the same as a host in the control group
[network]
192.168.9.51
192.168.9.75
192.168.9.185

# inner-compute is the groups of compute nodes which do not have
# external reachability.
# DEPRECATED, the group will be removed in S release of OpenStack,
# use variable neutron_compute_dvr_mode instead.
[inner-compute]

# external-compute is the groups of compute nodes which can reach
# outside.
# DEPRECATED, the group will be removed in S release of OpenStack,
# use variable neutron_compute_dvr_mode instead.
[external-compute]
192.168.9.10
192.168.9.12
192.168.9.15
192.168.9.16
192.168.9.17
192.168.9.18
192.168.9.19
192.168.9.20
192.168.9.21
192.168.9.22
192.168.9.23
192.168.9.24
192.168.9.25

# Chassis 02
192.168.9.52
192.168.9.53
192.168.9.54
192.168.9.55
192.168.9.57
192.168.9.58
192.168.9.59

## Chassis 03
192.168.9.76
192.168.9.77
192.168.9.78
192.168.9.79
192.168.9.80
192.168.9.82
192.168.9.83
192.168.9.84

## Chassis04
192.168.9.112
192.168.9.113
192.168.9.114
192.168.9.117
192.168.9.118
192.168.9.119
192.168.9.120
192.168.9.121
192.168.9.122
192.168.9.123
192.168.9.124
192.168.9.125

## Chassis05
192.168.9.137
192.168.9.138
192.168.9.139
192.168.9.142
192.168.9.144
192.168.9.145
192.168.9.146
192.168.9.147
192.168.9.148
192.168.9.149
192.168.9.150

## Chassis06
192.168.9.162
192.168.9.163
192.168.9.164
192.168.9.165
192.168.9.166
192.168.9.167
192.168.9.168
192.168.9.169
192.168.9.170
192.168.9.171
192.168.9.172
192.168.9.173
192.168.9.174
192.168.9.175

## Chassis07
192.168.9.187
192.168.9.188
192.168.9.189
192.168.9.190
192.168.9.191
192.168.9.192
192.168.9.193
192.168.9.194
192.168.9.195
#192.168.9.196
192.168.9.197
192.168.9.198
192.168.9.199
192.168.9.200

## Chasiss08
192.168.9.210
192.168.9.211
192.168.9.212
192.168.9.213
192.168.9.214
192.168.9.215
192.168.9.216
192.168.9.217
192.168.9.218
#192.168.9.219
192.168.9.220
#192.168.9.221
192.168.9.222

## Chasiss09
192.168.9.239
192.168.9.240
192.168.9.241
192.168.9.242
192.168.9.243
192.168.9.244
192.168.9.245
192.168.9.246
192.168.9.247

[compute:children]
inner-compute
external-compute

[monitoring]
192.168.9.49
192.168.9.50
192.168.9.74

# When compute nodes and control nodes use different interfaces,
# you need to comment out "api_interface" and other interfaces from the globals.yml
# and specify like below:
#compute01 neutron_external_interface=eth0 api_interface=em1 storage_interface=em1 tunnel_interface=em1

[storage]
192.168.9.110

[deployment]
localhost       ansible_connection=local

[baremetal:children]
control
network
compute
storage
monitoring

# You can explicitly specify which hosts run each project by updating the
# groups in the sections below. Common services are grouped together.
[chrony-server:children]
haproxy

[chrony:children]
control
network
compute
storage
monitoring

[collectd:children]
compute

[grafana:children]
monitoring

[etcd:children]
control
compute

[influxdb:children]
monitoring

[prometheus:children]
monitoring

[kafka:children]
control

[karbor:children]
control

[telegraf:children]
compute
control
monitoring
network
storage

[elasticsearch]
192.168.9.136
192.168.9.111
192.168.9.161
192.168.9.49
192.168.9.50
192.168.9.74

[elasticsearch-master]
192.168.9.111
192.168.9.136
192.168.9.161

[elasticsearch-data:children]
elasticsearch

[kibana:children]
elasticsearch-master

[curator:children]
monitoring

[haproxy:children]
cluster

[hyperv]
#hyperv_host

[hyperv:vars]
#ansible_user=user
#ansible_password=password
#ansible_port=5986
#ansible_connection=winrm
#ansible_winrm_server_cert_validation=ignore

[mariadb:children]
cluster

[rabbitmq:children]
cluster

[prometheus-rabbitmq-exporter]
192.168.9.11

[outward-rabbitmq:children]
control

[qdrouterd:children]
control

[monasca:children]
monitoring

[mongodb:children]
control

[keystone:children]
control

[glance:children]
control

[nova:children]
control

[neutron:children]
network

[openvswitch:children]
network
compute
manila-share

[opendaylight:children]
network

[cinder:children]
control

[cloudkitty:children]
control

[freezer:children]
control

[memcached:children]
cluster

[horizon:children]
control

[swift:children]
control

[barbican:children]
control

[heat:children]
control

[murano:children]
control

[solum:children]
control

[ironic:children]
control

[ceph:children]
control

[external-ceph]
10.240.201.30
10.240.201.29
10.240.201.31
10.240.201.32
10.240.201.28
10.240.201.33
10.240.201.34
10.240.201.35

[magnum:children]
control

[sahara:children]
control

[mistral:children]
control

[manila:children]
control

[ceilometer:children]
control

[aodh]
192.168.9.50

[congress:children]
control

[panko:children]
control

[gnocchi:children]
control

[tacker:children]
control

[trove:children]
control

# Tempest
[tempest:children]
control

[senlin:children]
control

[vmtp:children]
control

[vitrage:children]
control

[watcher:children]
control

[rally:children]
control

[searchlight:children]
control

[octavia:children]
control

[designate:children]
control

[placement:children]
control

[bifrost:children]
deployment

[zookeeper:children]
control

[zun:children]
control

[skydive:children]
monitoring

[redis:children]
control

[blazar:children]
control

# Additional control implemented here. These groups allow you to control which
# services run on which hosts at a per-service level.
#
# Word of caution: Some services are required to run on the same host to
# function appropriately. For example, neutron-metadata-agent must run on the
# same host as the l3-agent and (depending on configuration) the dhcp-agent.

# Glance
[glance-api:children]
glance

[glance-registry:children]
glance

# Nova
[nova-api:children]
nova

[nova-conductor:children]
nova

[nova-consoleauth:children]
nova

[nova-novncproxy:children]
nova

[nova-scheduler:children]
nova

[nova-spicehtml5proxy:children]
nova

[nova-compute-ironic:children]
nova

[nova-serialproxy:children]
nova

# Neutron
[neutron-server:children]
control

[neutron-dhcp-agent:children]
neutron

[neutron-l3-agent:children]
neutron

[neutron-lbaas-agent:children]
neutron

[neutron-metadata-agent:children]
neutron

[neutron-bgp-dragent:children]
neutron

[neutron-infoblox-ipam-agent:children]
neutron

[ironic-neutron-agent:children]
neutron

# Ceph
[ceph-mds:children]
ceph

[ceph-mgr:children]
ceph

[ceph-nfs:children]
ceph

[ceph-mon:children]
ceph

[ceph-rgw:children]
ceph

[ceph-osd:children]
storage

# Cinder
[cinder-api:children]
cinder

[cinder-backup:children]
storage

[cinder-scheduler:children]
cinder

[cinder-volume:children]
storage

# Cloudkitty
[cloudkitty-api:children]
cloudkitty

[cloudkitty-processor:children]
cloudkitty

# Freezer
[freezer-api:children]
freezer

[freezer-scheduler:children]
freezer

# iSCSI
[iscsid:children]
compute
storage
ironic

[tgtd:children]
storage

# Karbor
[karbor-api:children]
karbor

[karbor-protection:children]
karbor

[karbor-operationengine:children]
karbor

# Manila
[manila-api:children]
manila

[manila-scheduler:children]
manila

[manila-share:children]
network

[manila-data:children]
manila

# Swift
[swift-proxy-server:children]
swift

[swift-account-server:children]
storage

[swift-container-server:children]
storage

[swift-object-server:children]
storage

# Barbican
[barbican-api:children]
barbican

[barbican-keystone-listener:children]
barbican

[barbican-worker:children]
barbican

# Heat
[heat-api:children]
heat

[heat-api-cfn:children]
heat

[heat-engine:children]
heat

# Murano
[murano-api:children]
murano

[murano-engine:children]
murano

# Monasca
[monasca-api:children]
monasca

[monasca-log-api:children]
monasca

[monasca-log-transformer:children]
monasca

[monasca-log-persister:children]
monasca

# Ironic
[ironic-api:children]
ironic

[ironic-conductor:children]
ironic

[ironic-inspector:children]
ironic

[ironic-pxe:children]
ironic

[ironic-ipxe:children]
ironic

# Magnum
[magnum-api:children]
magnum

[magnum-conductor:children]
magnum

# Sahara
[sahara-api:children]
sahara

[sahara-engine:children]
sahara

# Solum
[solum-api:children]
solum

[solum-worker:children]
solum

[solum-deployer:children]
solum

[solum-conductor:children]
solum

# Mistral
[mistral-api:children]
mistral

[mistral-executor:children]
mistral

[mistral-engine:children]
mistral

# Ceilometer
[ceilometer-central:children]
ceilometer

[ceilometer-notification:children]
ceilometer

[ceilometer-compute:children]
compute

# Aodh
[aodh-api:children]
aodh

[aodh-evaluator:children]
aodh

[aodh-listener:children]
aodh

[aodh-notifier:children]
aodh

# Congress
[congress-api:children]
congress

[congress-datasource:children]
congress

[congress-policy-engine:children]
congress

# Panko
[panko-api:children]
panko

# Gnocchi
[gnocchi-api:children]
gnocchi

[gnocchi-statsd:children]
gnocchi

[gnocchi-metricd:children]
gnocchi

# Trove
[trove-api:children]
trove

[trove-conductor:children]
trove

[trove-taskmanager:children]
trove

# Multipathd
[multipathd:children]
compute
storage

# Watcher
[watcher-api:children]
watcher

[watcher-engine:children]
watcher

[watcher-applier:children]
watcher

# Senlin
[senlin-api:children]
senlin

[senlin-engine:children]
senlin

# Searchlight
[searchlight-api:children]
searchlight

[searchlight-listener:children]
searchlight

# Octavia
[octavia-api:children]
octavia

[octavia-health-manager:children]
octavia

[octavia-housekeeping:children]
octavia

[octavia-worker:children]
octavia

# Designate
[designate-api:children]
designate

[designate-central:children]
designate

[designate-producer:children]
designate

[designate-mdns:children]
network

[designate-worker:children]
designate

[designate-sink:children]
designate

[designate-backend-bind9:children]
designate

# Placement
[placement-api:children]
placement

# Zun
[zun-api:children]
zun

[zun-wsproxy:children]
zun

[zun-compute:children]
compute

# Skydive
[skydive-analyzer:children]
skydive

[skydive-agent:children]
compute
network

# Tacker
[tacker-server:children]
tacker

[tacker-conductor:children]
tacker

# Vitrage
[vitrage-api:children]
vitrage

[vitrage-notifier:children]
vitrage

[vitrage-graph:children]
vitrage

[vitrage-collector:children]
vitrage

[vitrage-ml:children]
vitrage

# Blazar
[blazar-api:children]
blazar

[blazar-manager:children]
blazar

# Prometheus
[prometheus:children]
monitoring

[prometheus-node-exporter:children]
monitoring
control
compute
storage
network
external-ceph
cluster
elasticsearch-master

[prometheus-mysqld-exporter:children]
mariadb

[prometheus-haproxy-exporter:children]
haproxy

[prometheus-memcached-exporter:children]
memcached

[prometheus-cadvisor:children]
monitoring
control
compute
storage
network
external-ceph
cluster
elasticsearch-master

[prometheus-alertmanager:children]
monitoring

[prometheus-ceph-exporter]
192.168.9.11

[prometheus-nocpro-alert:children]
monitoring

[external-ceph-mgr]
192.168.9.11
192.168.9.13
192.168.9.14

[prometheus-process-exporter:children]
external-ceph-mgr
external-ceph

[elastalert]
192.168.9.111
192.168.9.136
192.168.9.161

